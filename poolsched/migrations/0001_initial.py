# Generated by Django 3.1.1 on 2020-10-20 09:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GHInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('endpoint', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'poolsched_ghinstance',
            },
        ),
        migrations.CreateModel(
            name='GitRepo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=255, unique=True)),
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'poolsched_gitrepo',
            },
        ),
        migrations.CreateModel(
            name='GLInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('endpoint', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'poolsched_glinstance',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(default=None, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MeetupRepo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repo', models.CharField(max_length=100, unique=True)),
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'poolsched_meetuprepo',
            },
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('U', 'Up'), ('D', 'Down')], default='D', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='MeetupToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=40)),
                ('refresh_token', models.CharField(max_length=50)),
                ('reset', models.DateTimeField(default=django.utils.timezone.now)),
                ('jobs', models.ManyToManyField(related_name='meetuptokens', related_query_name='meetuptoken', to='poolsched.Job')),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='meetuptokens', related_query_name='meetuptoken', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'poolsched_meetuptoken',
            },
        ),
        migrations.AddField(
            model_name='job',
            name='logs',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='poolsched.log'),
        ),
        migrations.AddField(
            model_name='job',
            name='worker',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='poolsched.worker'),
        ),
        migrations.CreateModel(
            name='Intention',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('job', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='poolsched.job')),
                ('previous', models.ManyToManyField(blank=True, default=None, to='poolsched.Intention')),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GLToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=100)),
                ('reset', models.DateTimeField(default=django.utils.timezone.now)),
                ('jobs', models.ManyToManyField(related_name='gltokens', related_query_name='gltoken', to='poolsched.Job')),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gltokens', related_query_name='gltoken', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'poolsched_gltoken',
            },
        ),
        migrations.CreateModel(
            name='GLRepo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.CharField(max_length=40)),
                ('repo', models.CharField(max_length=100)),
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('instance', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='poolsched.glinstance')),
            ],
            options={
                'db_table': 'poolsched_glrepo',
                'unique_together': {('owner', 'repo', 'instance')},
            },
        ),
        migrations.CreateModel(
            name='GHToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=40)),
                ('reset', models.DateTimeField(default=django.utils.timezone.now)),
                ('jobs', models.ManyToManyField(related_name='ghtokens', related_query_name='ghtoken', to='poolsched.Job')),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ghtokens', related_query_name='ghtoken', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'poolsched_ghtoken',
            },
        ),
        migrations.CreateModel(
            name='GHRepo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.CharField(max_length=40)),
                ('repo', models.CharField(max_length=100)),
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('instance', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='poolsched.ghinstance')),
            ],
            options={
                'db_table': 'poolsched_ghrepo',
                'unique_together': {('owner', 'repo', 'instance')},
            },
        ),
        migrations.CreateModel(
            name='ArchJob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True)),
                ('archived', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('logs', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='poolsched.log')),
                ('worker', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='poolsched.worker')),
            ],
        ),
        migrations.CreateModel(
            name='ArchivedIntention',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField()),
                ('completed', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('OK', 'Success'), ('ER', 'Error')], default='OK', max_length=2)),
                ('arch_job', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='poolsched.archjob')),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='IMeetupRawArchived',
            fields=[
                ('archivedintention_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='poolsched.archivedintention')),
                ('repo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='poolsched.meetuprepo')),
            ],
            bases=('poolsched.archivedintention',),
        ),
        migrations.CreateModel(
            name='IMeetupRaw',
            fields=[
                ('intention_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='poolsched.intention')),
                ('repo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='poolsched.meetuprepo')),
            ],
            options={
                'db_table': 'poolsched_meetupiraw',
            },
            bases=('poolsched.intention',),
        ),
        migrations.CreateModel(
            name='IMeetupEnrichArchived',
            fields=[
                ('archivedintention_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='poolsched.archivedintention')),
                ('repo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='poolsched.meetuprepo')),
            ],
            bases=('poolsched.archivedintention',),
        ),
        migrations.CreateModel(
            name='IMeetupEnrich',
            fields=[
                ('intention_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='poolsched.intention')),
                ('repo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='poolsched.meetuprepo')),
            ],
            options={
                'db_table': 'poolsched_meetupienriched',
            },
            bases=('poolsched.intention',),
        ),
        migrations.CreateModel(
            name='IGLRawArchived',
            fields=[
                ('archivedintention_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='poolsched.archivedintention')),
                ('repo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='poolsched.glrepo')),
            ],
            bases=('poolsched.archivedintention',),
        ),
        migrations.CreateModel(
            name='IGLRaw',
            fields=[
                ('intention_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='poolsched.intention')),
                ('repo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='poolsched.glrepo')),
            ],
            options={
                'db_table': 'poolsched_gliraw',
            },
            bases=('poolsched.intention',),
        ),
        migrations.CreateModel(
            name='IGLEnrichArchived',
            fields=[
                ('archivedintention_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='poolsched.archivedintention')),
                ('repo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='poolsched.glrepo')),
            ],
            bases=('poolsched.archivedintention',),
        ),
        migrations.CreateModel(
            name='IGLEnrich',
            fields=[
                ('intention_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='poolsched.intention')),
                ('repo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='poolsched.glrepo')),
            ],
            options={
                'db_table': 'poolsched_glienriched',
            },
            bases=('poolsched.intention',),
        ),
        migrations.CreateModel(
            name='IGitRawArchived',
            fields=[
                ('archivedintention_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='poolsched.archivedintention')),
                ('repo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='poolsched.gitrepo')),
            ],
            bases=('poolsched.archivedintention',),
        ),
        migrations.CreateModel(
            name='IGitRaw',
            fields=[
                ('intention_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='poolsched.intention')),
                ('repo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='poolsched.gitrepo')),
            ],
            options={
                'db_table': 'poolsched_gitiraw',
            },
            bases=('poolsched.intention',),
        ),
        migrations.CreateModel(
            name='IGitEnrichArchived',
            fields=[
                ('archivedintention_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='poolsched.archivedintention')),
                ('repo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='poolsched.gitrepo')),
            ],
            bases=('poolsched.archivedintention',),
        ),
        migrations.CreateModel(
            name='IGitEnrich',
            fields=[
                ('intention_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='poolsched.intention')),
                ('repo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='poolsched.gitrepo')),
            ],
            options={
                'db_table': 'poolsched_gitienriched',
            },
            bases=('poolsched.intention',),
        ),
        migrations.CreateModel(
            name='IGHRawArchived',
            fields=[
                ('archivedintention_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='poolsched.archivedintention')),
                ('repo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='poolsched.ghrepo')),
            ],
            bases=('poolsched.archivedintention',),
        ),
        migrations.CreateModel(
            name='IGHRaw',
            fields=[
                ('intention_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='poolsched.intention')),
                ('repo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='poolsched.ghrepo')),
            ],
            options={
                'db_table': 'poolsched_ghiraw',
            },
            bases=('poolsched.intention',),
        ),
        migrations.CreateModel(
            name='IGHEnrichArchived',
            fields=[
                ('archivedintention_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='poolsched.archivedintention')),
                ('repo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='poolsched.ghrepo')),
            ],
            bases=('poolsched.archivedintention',),
        ),
        migrations.CreateModel(
            name='IGHEnrich',
            fields=[
                ('intention_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='poolsched.intention')),
                ('repo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='poolsched.ghrepo')),
            ],
            options={
                'db_table': 'poolsched_ghienriched',
            },
            bases=('poolsched.intention',),
        ),
    ]
